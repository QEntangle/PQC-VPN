# strongSwan IPsec secrets for PQC VPN Hub
# Enhanced version with PKI+PSK hybrid authentication
# /etc/ipsec.secrets

# Hub server certificate and private key (PQC)
# Primary authentication using ML-DSA (Dilithium) certificates
"C=US, O=PQC-VPN, CN=hub.pqc-vpn.local" : ECDSA hub-key.pem
"C=US, O=PQC-VPN, CN=hub.pqc-vpn.local" : RSA hub-key.pem

# Certificate-based authentication for any spoke
: ECDSA hub-key.pem
: RSA hub-key.pem

# Pre-shared keys for PSK authentication
# Enterprise-grade PSK management with user-specific keys

# Global PSK for fallback authentication
%any %any : PSK "$(openssl rand -hex 32)"

# Hub-specific PSK for spoke connections
hub.pqc-vpn.local %any : PSK "${HUB_PSK:-$(head -c 32 /dev/urandom | base64)}"

# User-specific PSKs (populated by management scripts)
# Format: <hub_id> <spoke_id> : PSK "<strong_random_key>"

# Administrative access PSK
admin@hub.pqc-vpn.local %any : PSK "${ADMIN_PSK:-admin_$(openssl rand -hex 16)}"

# Site-to-site PSKs
# Branch office connections
hub.pqc-vpn.local branch1.pqc-vpn.local : PSK "${BRANCH1_PSK:-$(openssl rand -hex 32)}"
hub.pqc-vpn.local branch2.pqc-vpn.local : PSK "${BRANCH2_PSK:-$(openssl rand -hex 32)}"

# EAP credentials for RADIUS authentication
# Username-password pairs for EAP-MSCHAPv2
testuser : EAP "TestPassword123!"
admin : EAP "${ADMIN_EAP_PASSWORD:-Admin@PQC2025!}"

# XAUTH credentials for legacy client support
admin : XAUTH "${ADMIN_XAUTH_PASSWORD:-XAuth@PQC2025!}"
service : XAUTH "${SERVICE_PASSWORD:-Service@PQC2025!}"

# High-availability cluster authentication
"C=US, O=PQC-VPN, CN=hub-cluster.pqc-vpn.local" : ECDSA cluster-key.pem
hub-cluster.pqc-vpn.local %any : PSK "${CLUSTER_PSK:-$(openssl rand -hex 32)}"

# Load balancer authentication
"C=US, O=PQC-VPN, CN=lb.pqc-vpn.local" : ECDSA lb-key.pem
lb.pqc-vpn.local %any : PSK "${LB_PSK:-$(openssl rand -hex 32)}"

# Monitoring system authentication
"C=US, O=PQC-VPN, CN=monitor.pqc-vpn.local" : ECDSA monitor-key.pem
monitor.pqc-vpn.local %any : PSK "${MONITOR_PSK:-$(openssl rand -hex 32)}"

# Individual user certificates and PSKs (dynamically managed)
# PKI authentication entries
# Format: "C=US, O=PQC-VPN, CN=<username>.pqc-vpn.local" : ECDSA <username>-key.pem

# PSK authentication entries
# Format: <hub_id> <spoke_id> : PSK "<secure_random_key>"

# Emergency access PSK (use only in emergencies)
# This should be rotated regularly and used only for disaster recovery
emergency.pqc-vpn.local %any : PSK "${EMERGENCY_PSK:-Emergency@$(date +%Y)}"

# Group-based PSKs for organizational units
# Sales team
hub.pqc-vpn.local sales.pqc-vpn.local : PSK "${SALES_PSK:-Sales@PQC2025!}"

# Engineering team
hub.pqc-vpn.local engineering.pqc-vpn.local : PSK "${ENGINEERING_PSK:-Eng@PQC2025!}"

# Management team
hub.pqc-vpn.local management.pqc-vpn.local : PSK "${MANAGEMENT_PSK:-Mgmt@PQC2025!}"

# External contractor access
hub.pqc-vpn.local contractor.pqc-vpn.local : PSK "${CONTRACTOR_PSK:-$(openssl rand -hex 24)}"

# IoT device PSKs (for automated systems)
hub.pqc-vpn.local iot-sensors.pqc-vpn.local : PSK "${IOT_PSK:-IoT@PQC2025!}"

# VoIP system PSK
hub.pqc-vpn.local voip.pqc-vpn.local : PSK "${VOIP_PSK:-VoIP@PQC2025!}"

# Backup system PSK
hub.pqc-vpn.local backup.pqc-vpn.local : PSK "${BACKUP_PSK:-Backup@PQC2025!}"

# Dynamic user secrets (included from external files)
# This allows for automated user management without modifying this file
include /etc/ipsec.d/secrets/users/*.secrets
include /etc/ipsec.d/secrets/groups/*.secrets
include /etc/ipsec.d/secrets/services/*.secrets

# Key rotation schedule (comments for reference)
# PSKs should be rotated every 90 days
# Emergency PSK should be rotated every 30 days
# Service PSKs should be rotated every 180 days
# User certificates should be valid for 365 days with auto-renewal at 30 days before expiry

# Security notes:
# 1. All PSKs should be at least 32 characters long
# 2. Use cryptographically secure random generation
# 3. Store backup copies securely (encrypted)
# 4. Implement automated key rotation
# 5. Monitor for key compromise indicators
# 6. Use different keys for different security domains

# Compliance requirements:
# - NIST 800-63B for authentication requirements
# - FIPS 140-2 Level 3 for key storage (if using HSM)
# - ISO 27001 for information security management
# - SOC 2 Type II for service organization controls
