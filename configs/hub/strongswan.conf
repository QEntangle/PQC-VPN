# strongSwan configuration for PQC VPN Hub
# Enhanced version with latest PQC algorithms and enterprise features
# /etc/strongswan.conf

# Main daemon configuration
charon {
    # Network and interface settings
    port = 500
    port_nat_t = 4500
    
    # Thread and process management
    threads = 16
    process_priority = -1
    
    # Enhanced logging with PQC-specific categories
    filelog {
        charon {
            path = /var/log/strongswan/charon.log
            time_format = %b %e %T
            ike_name = yes
            default = 1
        }
        stderr {
            ike = 2
            knl = 2
            cfg = 2
            mgr = 2
            job = 2
        }
    }
    
    # Network interface configuration
    interfaces_use = eth0,ens18,enp0s3
    interfaces_ignore = lo
    
    # DNS and routing
    dns1 = 8.8.8.8
    dns2 = 1.1.1.1
    
    # Cisco Unity support for Windows clients
    cisco_unity = yes
    
    # NAT traversal settings
    keep_alive = 20s
    nat_traversal = yes
    
    # Certificate and key management
    send_vendor_id = yes
    send_cert = ifasked
    
    # Enhanced security settings
    signature_authentication = yes
    signature_authentication_constraints = yes
    
    # IKE fragment support for large PQC keys
    fragment_size = 1280
    max_packet = 10000
    
    # Retransmission settings optimized for PQC
    retransmit_timeout = 4.0
    retransmit_tries = 5
    retransmit_jitter = 0
    retransmit_base = 1.8
    
    # DPD settings
    dpdaction = restart
    dpddelay = 30s
    dpdtimeout = 150s
    
    # IKE settings optimized for PQC
    ikesa_limit = 100
    half_open_timeout = 30
    cookie_threshold = 30
    block_threshold = 20
    
    # MOBIKE for seamless roaming
    mobike = yes
    
    # Multiple authentication rounds
    multiple_authentication = yes
    
    # Load plugins with PQC support
    load_modular = yes
    
    plugins {
        # Core plugins
        include strongswan.d/charon/*.conf
        
        # Random number generation
        random {
            urandom_device = /dev/urandom
            aesni_key_size = 256
        }
        
        # Cryptographic algorithms
        openssl {
            engine_id = openssl
            load_certs = yes
        }
        
        # Post-Quantum Cryptography plugins
        oqs {
            # ML-KEM (Kyber) settings
            kyber512_enabled = yes
            kyber768_enabled = yes
            kyber1024_enabled = yes
            
            # ML-DSA (Dilithium) settings  
            dilithium2_enabled = yes
            dilithium3_enabled = yes
            dilithium5_enabled = yes
            
            # SPHINCS+ settings
            sphincs_sha2_128f_simple_enabled = yes
            sphincs_sha2_128s_simple_enabled = yes
            sphincs_sha2_192f_simple_enabled = yes
            sphincs_sha2_256f_simple_enabled = yes
            
            # Falcon settings
            falcon512_enabled = yes
            falcon1024_enabled = yes
            
            # Performance optimizations
            use_hybrid_mode = yes
            cache_keys = yes
            parallel_ops = yes
        }
        
        # X.509 certificate handling
        x509 {
            enforce_critical = yes
        }
        
        # PKCS#11 support for HSM
        pkcs11 {
            modules {
                hsm {
                    path = /usr/lib/softhsm/libsofthsm2.so
                    os_locking = yes
                    load_certs = yes
                }
            }
        }
        
        # Networking plugins
        kernel-netlink {
            fwmark = !0x00000001/0x00000001
            buflen = 1024
            process_rules = yes
            roam_events = yes
            xfrm_acq_expires = 165
        }
        
        # Socket configuration
        socket-default {
            fwmark = 0x10000000
            use_ipv4 = yes
            use_ipv6 = yes
        }
        
        # Stroke plugin for control
        stroke {
            socket = unix:///var/run/charon.ctl
            timeout = 120000
        }
        
        # Certificate validation
        revocation {
            enable_ocsp = yes
            enable_crl = yes
            ocsp_timeout = 30
            crl_timeout = 30
        }
        
        # Constraints plugin
        constraints {
            check_pathlen = yes
            check_policy = yes
        }
        
        # Advanced routing
        farp {
            interface_whitelist = eth0
        }
        
        # Connection marking for policy routing
        connmark {
            mask = 0x00ffffff
        }
        
        # Traffic flow confidentiality
        tfc {
            padding = yes
            random_size = yes
        }
        
        # White list plugin for IP filtering
        whitelist {
            enable = no
            socket = /var/run/charon.wl
        }
        
        # Error notification
        error-notify {
            log_level = 1
        }
        
        # Certificate expiry notification
        certexpiry {
            csv {
                path = /var/log/strongswan/cert-expiry.csv
                format = %t,%i,%s,%e
                local = yes
                remote = yes
                crl = yes
                ac = yes
            }
        }
        
        # LED notification (for embedded systems)
        led {
            activity_led = /sys/class/leds/activity/brightness
        }
        
        # EAP plugins for enterprise authentication
        eap-identity {
            request_identity = yes
        }
        
        eap-mschapv2 {
            winbind_username = yes
        }
        
        eap-tls {
            request_peer_cert = yes
            max_message_count = 32
            include_length = yes
        }
        
        eap-radius {
            accounting = yes
            timeout = 30
            retransmit = 3
            secret = radius_shared_secret
        }
        
        # Database plugins
        sql {
            database = sqlite:///etc/ipsec.d/ipsec.db
            loglevel = -1
        }
        
        # High availability
        ha {
            local = 192.168.1.100
            remote = 192.168.1.101
            secret = ha_secret_key
            fifo_interface = yes
            monitor = yes
            resync = yes
            autobalance = 0
        }
        
        # Load balancing
        forecast {
            groups = 192.168.1.100/24
            reinject = yes
        }
        
        # Updown script for custom actions
        updown {
            dns_handler = yes
        }
        
        # DHCP plugin for Windows clients
        dhcp {
            interface = eth0
            identity_lease = yes
            server = 192.168.1.1
        }
        
        # Unity plugin for Cisco compatibility
        unity {
            load = yes
        }
        
        # Attr plugin for configuration attributes
        attr {
            dns = 8.8.8.8, 1.1.1.1
            subnet = 0.0.0.0/0
        }
    }
    
    # API settings for management interface
    api {
        enable = yes
        socket = unix:///var/run/charon.api
    }
}

# Pool configuration for IP assignment
pools {
    # Main pool for spoke clients
    spoke_pool {
        addrs = 10.10.1.0/24-10.10.100.0/24
        dns = 8.8.8.8, 1.1.1.1
        nbns = 10.10.0.1
        subnet = 0.0.0.0/0
    }
    
    # VIP pool for high-priority clients
    vip_pool {
        addrs = 10.10.200.0/24
        dns = 8.8.8.8, 1.1.1.1
        subnet = 0.0.0.0/0
    }
    
    # Guest pool for temporary access
    guest_pool {
        addrs = 10.10.250.0/24
        dns = 8.8.8.8
        subnet = 10.10.0.0/16
    }
}

# Secrets configuration
secrets {
    # File-based secrets
    file {
        secrets = /etc/ipsec.secrets
    }
    
    # SQL-based secrets (optional)
    sql {
        database = sqlite:///etc/ipsec.d/ipsec.db
    }
}

# Starter configuration (compatibility)
starter {
    load_warning = yes
    unique_ids = no
    cachecrls = yes
    strictcrlpolicy = no
}

# Manager configuration
manager {
    socket = unix:///var/run/charon-mgr.sock
    timeout = 120000
    debug = no
}

# Medsrv configuration (if using mediation server)
medsrv {
    database = sqlite:///etc/ipsec.d/mediation.db
    rekey = 1200
    dpd = 300
}

# TNCS configuration (if using Trusted Network Connect)
tncs {
    recommendation_policy = default
    dh_group = modp2048
    max_message_size = 65536
}

# TKM configuration (if using Trusted Key Manager)
tkm {
    socket = /run/tkm/tkm.socket
}

# Scepclient configuration (if using SCEP)
scepclient {
    cacert_enc = /etc/ipsec.d/cacerts/encryption.pem
    cacert_sig = /etc/ipsec.d/cacerts/signature.pem
}

# PKI configuration
pki {
    # Default key strength
    rsa_key_size = 4096
    ecdsa_curve = secp384r1
    
    # Certificate validity
    default_days = 365
    ca_days = 3650
    
    # Extensions
    ocsp_uri = http://ocsp.pqc-vpn.local
    crl_uri = http://crl.pqc-vpn.local/crl.pem
}

# Logging configuration
# Enable comprehensive logging for troubleshooting and security monitoring
libstrongswan {
    # Cryptographic library settings
    crypto_test {
        on_add = yes
        on_create = yes
        required = no
        rng_true = yes
    }
    
    # Database settings
    database {
        default = sqlite:///etc/ipsec.d/ipsec.db
    }
    
    # Plugin loader
    plugins {
        include strongswan.d/charon/*.conf
    }
}

# Include additional configuration files
include strongswan.d/*.conf
